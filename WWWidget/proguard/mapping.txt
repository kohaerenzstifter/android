android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.GravityCompat -> android.support.v4.view.a:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.b:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.c:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.d:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.e:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.f:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.g:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.h:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.i:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.j:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.k:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.l:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.m:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.n:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.o:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.p:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.q:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.r:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.s:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.t:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.u:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.v:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.w:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.x:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.y:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.z:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.aa:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ab:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ac:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ad:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ae:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.af:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ag:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ah:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ai:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.aj:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ak:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.al:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.am:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.an:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ao:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ap:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.aq:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ar:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.as:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.at:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.au:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewGravity(android.view.View) -> e
    boolean checkDrawerViewGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean hasOpaqueBackground(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    boolean isEdgeTouched(int) -> d
    boolean isEdgeTouched(int,int) -> c
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> d
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> e
    int getEdgesTouched(int,int) -> f
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
org.kohaerenzstiftung.Activity -> org.kohaerenzstiftung.a:
    org.kohaerenzstiftung.Activity$Result mResult -> d
    org.kohaerenzstiftung.Activity$ActivityReturner mActivityReturner -> e
    android.os.Bundle mResultBundle -> a
    java.lang.String mFailureMessage -> b
    android.content.ServiceConnection mServiceConnection -> f
    org.kohaerenzstiftung.Service mService -> c
    java.lang.Class mServiceToStart -> g
    java.lang.Class mServiceToBind -> h
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void handleResult() -> i
    void startActivityForResult(java.lang.Class,org.kohaerenzstiftung.Activity$ActivityReturner,android.os.Bundle) -> a
    void startActivity(java.lang.Class) -> a
    void startActivity(java.lang.Class,android.os.Bundle) -> a
    void initialise() -> a
    void recoverResources() -> b
    void onStart() -> onStart
    void releaseResources() -> c
    void uninitialise() -> d
    void onStop() -> onStop
    void onServiceUnbound() -> e
    void readArguments(android.os.Bundle) -> a
    void log(java.lang.String,android.content.Context) -> a
    java.io.PrintWriter getLogWriter(android.content.Context) -> a
    void log(java.lang.Throwable) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onServiceBound() -> f
    void startService(java.lang.Class) -> b
    java.lang.Class getServiceToStart() -> g
    java.lang.Class getServiceToBind() -> h
    void finish(boolean) -> a
    void access$0(org.kohaerenzstiftung.Activity,java.lang.Throwable) -> a
org.kohaerenzstiftung.Activity$1 -> org.kohaerenzstiftung.b:
    org.kohaerenzstiftung.Activity this$0 -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
org.kohaerenzstiftung.Activity$2 -> org.kohaerenzstiftung.c:
    org.kohaerenzstiftung.Activity this$0 -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
org.kohaerenzstiftung.Activity$ActivityReturner -> org.kohaerenzstiftung.d:
    android.os.Bundle mExtras -> a
    org.kohaerenzstiftung.Activity this$0 -> b
    void handleResult(android.os.Bundle) -> a
    void handleError(java.lang.String) -> a
org.kohaerenzstiftung.Activity$ActivityReturnerNotSetException -> org.kohaerenzstiftung.e:
    org.kohaerenzstiftung.Activity this$0 -> a
org.kohaerenzstiftung.Activity$Result -> org.kohaerenzstiftung.f:
    int mRequestCode -> b
    int mResultCode -> c
    android.content.Intent mData -> d
    org.kohaerenzstiftung.Activity this$0 -> a
    android.content.Intent getmData() -> a
    boolean hasSucceeded() -> b
org.kohaerenzstiftung.AsyncTaskResult -> org.kohaerenzstiftung.g:
    java.lang.Throwable mThrowable -> a
    java.lang.String mFingerprint -> b
    boolean isSuccess() -> a
    java.lang.String getFingerprint() -> b
    java.lang.Throwable getThrowable() -> c
    void setThrowable(java.lang.Throwable) -> a
    void setFingerprint(java.lang.String) -> a
org.kohaerenzstiftung.ContextItemExecutor -> org.kohaerenzstiftung.h:
    void execute(android.view.MenuItem) -> a
org.kohaerenzstiftung.ContextMenuCreator -> org.kohaerenzstiftung.i:
    int createContextMenu(android.view.ContextMenu$ContextMenuInfo) -> a
org.kohaerenzstiftung.Dialog -> org.kohaerenzstiftung.j:
    int mDialogId -> a
    java.util.HashMap mContextMenuCreators -> b
    java.util.HashMap mContextItemExecutors -> c
    org.kohaerenzstiftung.StandardActivity mActivity -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    int getDialogId() -> a
    void setDialogId(int) -> a
    void onShow() -> b
    void onDismiss() -> c
    void updateViews() -> d
    void recoverResources() -> e
    void releaseResources() -> f
    void findElements() -> g
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void assignHandlers() -> h
org.kohaerenzstiftung.Dialog$1 -> org.kohaerenzstiftung.k:
    org.kohaerenzstiftung.Dialog this$0 -> a
    void onShow(android.content.DialogInterface) -> onShow
org.kohaerenzstiftung.Dialogable -> org.kohaerenzstiftung.l:
    void setDialogId(int) -> a
    void onDismiss() -> c
    int getDialogId() -> a
org.kohaerenzstiftung.FingerprintTrustChecker -> org.kohaerenzstiftung.m:
    java.util.ArrayList mFingerprints -> a
    java.lang.String mFingerprint -> b
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> a
    java.lang.String getFingerprint() -> a
    java.lang.String hexify(byte[]) -> a
org.kohaerenzstiftung.HTTP -> org.kohaerenzstiftung.n:
    org.kohaerenzstiftung.SocketFactory socketFactory -> a
    org.apache.http.HttpResponse doHttps(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,org.kohaerenzstiftung.TrustChecker,org.apache.http.entity.AbstractHttpEntity,int) -> a
    org.apache.http.HttpResponse doHttp(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,org.apache.http.entity.AbstractHttpEntity,int) -> a
    org.apache.http.HttpResponse doHttp(org.apache.http.impl.client.DefaultHttpClient,java.lang.String,java.lang.String,android.net.Uri$Builder,java.util.List,java.util.List,org.apache.http.entity.AbstractHttpEntity,int) -> a
    org.apache.http.impl.client.DefaultHttpClient getHttpClient(int,org.kohaerenzstiftung.TrustChecker) -> a
org.kohaerenzstiftung.HTTPServerRequest -> org.kohaerenzstiftung.o:
    java.lang.Runnable mSuccessRunnable -> a
    java.lang.Runnable mCancelledRunnable -> b
    org.kohaerenzstiftung.HTTPServerRequest$ThrowableRunnable mThrowableRunnable -> c
    org.kohaerenzstiftung.StandardActivity mStandardActivity -> d
    java.lang.String mPathToFingerprints -> e
    int mOkStringId -> f
    int mCancelStringId -> g
    int mServerCertificateStringId -> h
    org.kohaerenzstiftung.HTTPServerRequest$Worker mWorker -> i
    void execute() -> a
org.kohaerenzstiftung.HTTPServerRequest$AsyncTask -> org.kohaerenzstiftung.p:
    org.kohaerenzstiftung.ProgressDialog mProgressDialog -> b
    org.kohaerenzstiftung.HTTPServerRequest this$0 -> a
    void onCancelled() -> onCancelled
    void askIfServerTrusted(java.lang.String,org.kohaerenzstiftung.YesNoable) -> a
    void onPostExecute(org.kohaerenzstiftung.AsyncTaskResult) -> a
    void onPreExecute() -> onPreExecute
    org.kohaerenzstiftung.AsyncTaskResult doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.kohaerenzstiftung.HTTPServerRequest$ThrowableRunnable -> org.kohaerenzstiftung.q:
    void setThrowable(java.lang.Throwable) -> a
org.kohaerenzstiftung.HTTPServerRequest$Worker -> org.kohaerenzstiftung.r:
    org.kohaerenzstiftung.AsyncTaskResult work() -> a
org.kohaerenzstiftung.HTTPServerRequest$YesNoable -> org.kohaerenzstiftung.s:
    java.lang.String mFingerprint -> b
    org.kohaerenzstiftung.HTTPServerRequest this$0 -> a
    void trustServer(java.lang.String) -> a
    void yes(int) -> a
    void no(int) -> b
org.kohaerenzstiftung.Language -> org.kohaerenzstiftung.Language:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String mIso3Language -> a
    java.lang.String mDisplayLanguage -> b
    void setmIso3Language(java.lang.String) -> a
    void setmDisplayLanguage(java.lang.String) -> b
    boolean equals(java.lang.Object) -> equals
    java.lang.String getmIso3Language() -> a
    java.lang.String getmDisplayLanguage() -> b
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.kohaerenzstiftung.Language$1 -> org.kohaerenzstiftung.t:
    org.kohaerenzstiftung.Language createFromParcel(android.os.Parcel) -> a
    org.kohaerenzstiftung.Language[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
org.kohaerenzstiftung.ProgressDialog -> org.kohaerenzstiftung.u:
    int mDialogId -> a
    void setDialogId(int) -> a
    void onDismiss() -> c
    int getDialogId() -> a
org.kohaerenzstiftung.Service -> org.kohaerenzstiftung.v:
    android.os.IBinder mBinder -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void handleStartCommand() -> a
    org.kohaerenzstiftung.Service$ServiceHandler getFreeServiceHandler() -> b
    void fillMessage(android.content.Intent,int,int,android.os.Message) -> a
org.kohaerenzstiftung.Service$Binder -> org.kohaerenzstiftung.w:
    org.kohaerenzstiftung.Service this$0 -> a
    org.kohaerenzstiftung.Service getService() -> a
org.kohaerenzstiftung.Service$ServiceHandler -> org.kohaerenzstiftung.x:
    void handleMessage(android.os.Message) -> handleMessage
    void doHandleMessage(android.os.Message) -> a
org.kohaerenzstiftung.SocketFactory -> org.kohaerenzstiftung.y:
    javax.net.ssl.SSLContext mSslContext -> a
    org.kohaerenzstiftung.TrustChecker mTrustChecker -> b
    void setmTrustChecker(org.kohaerenzstiftung.TrustChecker) -> a
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket() -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    org.kohaerenzstiftung.TrustChecker access$0(org.kohaerenzstiftung.SocketFactory) -> a
org.kohaerenzstiftung.SocketFactory$1 -> org.kohaerenzstiftung.z:
    org.kohaerenzstiftung.SocketFactory this$0 -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
org.kohaerenzstiftung.StandardActivity -> org.kohaerenzstiftung.aa:
    android.app.Dialog mDialog -> d
    java.util.LinkedList mDialogRegistry -> e
    void onPause() -> onPause
    void onCreate(android.os.Bundle) -> onCreate
    int getLayout() -> i
    void updateViews() -> j
    void findElements() -> k
    void assignHandlers() -> l
    void onStart() -> onStart
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void askYesNo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.kohaerenzstiftung.YesNoable) -> a
    void showDialog(org.kohaerenzstiftung.Dialogable) -> a
    void hideSoftKeyboard(android.view.View) -> hideSoftKeyboard
org.kohaerenzstiftung.StandardActivity$1 -> org.kohaerenzstiftung.ab:
    org.kohaerenzstiftung.StandardActivity this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
org.kohaerenzstiftung.TrustChecker -> org.kohaerenzstiftung.ac:
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> a
org.kohaerenzstiftung.YesNoDialog -> org.kohaerenzstiftung.ad:
    org.kohaerenzstiftung.YesNoable mYesNoable -> a
    int mDialogId -> b
    void yesNo(boolean) -> a
    void yes() -> b
    void no() -> d
    void setDialogId(int) -> a
    void onDismiss() -> c
    int getDialogId() -> a
    void access$0(org.kohaerenzstiftung.YesNoDialog,boolean) -> a
org.kohaerenzstiftung.YesNoDialog$1 -> org.kohaerenzstiftung.ae:
    org.kohaerenzstiftung.YesNoDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.kohaerenzstiftung.YesNoDialog$2 -> org.kohaerenzstiftung.af:
    org.kohaerenzstiftung.YesNoDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.kohaerenzstiftung.YesNoable -> org.kohaerenzstiftung.ag:
    android.os.Bundle mExtras -> a
    void yes(int) -> a
    void no(int) -> b
org.kohaerenzstiftung.game.ArrayFactory -> org.kohaerenzstiftung.a.a:
    org.kohaerenzstiftung.game.Factorisable[] mArray -> a
    boolean[] mFree -> b
    void recycle(org.kohaerenzstiftung.game.Factorisable) -> a
    org.kohaerenzstiftung.game.Factorisable getFree() -> a
org.kohaerenzstiftung.game.Factorisable -> org.kohaerenzstiftung.a.b:
    org.kohaerenzstiftung.game.Factorisable createInstance() -> a
org.kohaerenzstiftung.game.Finger -> org.kohaerenzstiftung.a.c:
    float mX -> a
    float mY -> b
    int mPointerId -> c
    org.kohaerenzstiftung.game.Finger[] fingers -> d
    org.kohaerenzstiftung.game.ArrayFactory factory -> e
    org.kohaerenzstiftung.game.Finger getFree() -> b
    void recycle(org.kohaerenzstiftung.game.Finger) -> a
    org.kohaerenzstiftung.game.Factorisable createInstance() -> a
    org.kohaerenzstiftung.game.Finger get(int) -> a
org.kohaerenzstiftung.game.Game -> org.kohaerenzstiftung.a.d:
    org.kohaerenzstiftung.game.ListFactory mSoundFactory -> e
    org.kohaerenzstiftung.game.Game$HandleTouchesListener mHandleTouchesListener -> d
    org.kohaerenzstiftung.game.Game$AccelerationChangedListener mAccelerationChangedListener -> f
    int mMaxStreams -> g
    int mStreamsUsed -> h
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onCreate(android.os.Bundle) -> onCreate
    int getMaxStreams() -> i
    org.kohaerenzstiftung.game.Game$AccelerationChangedListener getAccelerationChangedListener() -> j
    org.kohaerenzstiftung.game.Game$HandleTouchesListener getHandleTouchesListener() -> k
    android.view.View getContentView() -> l
    void onResume() -> onResume
    void handleOnResume() -> m
    void handleOnPause() -> n
    void onPause() -> onPause
org.kohaerenzstiftung.game.Game$AccelerationChangedListener -> org.kohaerenzstiftung.a.e:
    void handleAccelerationChanged(float,float,float) -> a
org.kohaerenzstiftung.game.Game$HandleTouchesListener -> org.kohaerenzstiftung.a.f:
    void handleTouches(java.util.LinkedList) -> a
org.kohaerenzstiftung.game.ListFactory -> org.kohaerenzstiftung.a.g:
    java.util.LinkedList mBusyList -> a
    java.util.LinkedList mFreeList -> b
    org.kohaerenzstiftung.game.Factorisable mMaster -> c
org.kohaerenzstiftung.game.Resolution -> org.kohaerenzstiftung.a.h:
    float mY -> a
    float mX -> b
    float mZ -> c
org.kohaerenzstiftung.game.Sound -> org.kohaerenzstiftung.a.i:
    org.kohaerenzstiftung.game.Factorisable createInstance() -> a
org.kohaerenzstiftung.game.Touch -> org.kohaerenzstiftung.a.j:
    org.kohaerenzstiftung.game.Touch$TouchTranslator touchTranslator -> a
    void setTouchTranslator(org.kohaerenzstiftung.game.Touch$TouchTranslator) -> a
    boolean handleTouch(org.kohaerenzstiftung.game.Game,android.view.View,android.view.MotionEvent) -> a
org.kohaerenzstiftung.game.Touch$TouchTranslator -> org.kohaerenzstiftung.a.k:
    float translateX(float) -> a
    float translateY(float) -> b
org.kohaerenzstiftung.game.TouchEvent -> org.kohaerenzstiftung.a.l:
    int mType -> a
    float mX -> b
    float mY -> c
    org.kohaerenzstiftung.game.Finger mFinger -> d
    java.util.LinkedList pendingEvents -> e
    org.kohaerenzstiftung.game.ArrayFactory factory -> f
    org.kohaerenzstiftung.game.TouchEvent getFree() -> b
    void recycle(org.kohaerenzstiftung.game.TouchEvent) -> a
    org.kohaerenzstiftung.game.Factorisable createInstance() -> a
org.kohaerenzstiftung.game.gl.Game -> org.kohaerenzstiftung.a.a.a:
    android.opengl.GLSurfaceView mGlView -> e
    boolean mSurfaceCreatedFirstTime -> g
    boolean mSurfaceCreated -> f
    boolean mFrameDrawn -> h
    long mLastFrameDrawnAt -> i
    android.view.View getContentView() -> l
    void handleOnResume() -> m
    void handleHandleOnResume() -> o
    void handleHandleOnPause() -> p
    void handleOnPause() -> n
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    org.kohaerenzstiftung.game.Resolution getResolution(int,int,int) -> a
    void setResolution(org.kohaerenzstiftung.game.Resolution,org.kohaerenzstiftung.game.Resolution) -> a
    void render(long) -> a
    void doRender(long) -> b
org.kohaerenzstiftung.game.gl.Game$1 -> org.kohaerenzstiftung.a.a.b:
    org.kohaerenzstiftung.game.gl.Game this$0 -> a
    float translateY(float) -> b
    float translateX(float) -> a
org.kohaerenzstiftung.game.gl.Graphics -> org.kohaerenzstiftung.a.a.c:
    boolean mCameraChanged -> a
    javax.microedition.khronos.opengles.GL10 mGl -> b
    org.kohaerenzstiftung.game.Resolution mWantResolution -> q
    org.kohaerenzstiftung.game.Resolution mIsResolution -> c
    int mClearColour -> r
    org.kohaerenzstiftung.game.gl.Game mGame -> d
    float mRight -> e
    float mLeft -> f
    float mTop -> g
    float mBottom -> h
    float mNear -> i
    float mFar -> j
    float mMaxRight -> k
    float mMinLeft -> l
    float mMaxTop -> m
    float mMinBottom -> n
    float mMinNear -> o
    float mMaxFar -> p
    void setPersistentState(javax.microedition.khronos.opengles.GL10) -> a
    void setResolutions(org.kohaerenzstiftung.game.Resolution,org.kohaerenzstiftung.game.Resolution) -> a
    void zoom(float) -> a
    void calcBounds(org.kohaerenzstiftung.game.Resolution) -> a
    void setCamera(javax.microedition.khronos.opengles.GL10) -> b
    void zoom(float,float,float,float) -> a
    float getMinZoomFactor(float,float,float) -> b
    float getGenericMinZoomFactor(float,float,float,float,float) -> a
    void setCameraParameters(float,float,float,float,float,float) -> b
    int move(float,float,float) -> a
    void respect(float,float,float,float,float,float) -> a
org.kohaerenzstiftung.game.gl.objects.Game -> org.kohaerenzstiftung.a.a.a.a:
    java.util.List mObjects -> g
    java.util.List mRemoveFromContainer -> h
    java.util.List mAddToContainer -> i
    boolean mIsRendering -> j
    long mDeltaMillisAccumulated -> k
    void addToObjects(org.kohaerenzstiftung.game.gl.objects.Object) -> a
    void doRender(long) -> b
    void renderObjects(javax.microedition.khronos.opengles.GL10) -> a
    boolean renderObjectsAtLevel(javax.microedition.khronos.opengles.GL10,java.util.List,int) -> a
    void update(long) -> c
    void doRemoveFromContainer(org.kohaerenzstiftung.game.gl.objects.Object) -> b
    void doAddToObjects(org.kohaerenzstiftung.game.gl.objects.Object,org.kohaerenzstiftung.game.gl.objects.Object) -> b
    void addToObjects(org.kohaerenzstiftung.game.gl.objects.Object,org.kohaerenzstiftung.game.gl.objects.Object) -> a
    void deferredAddToObjects(org.kohaerenzstiftung.game.gl.objects.Object,org.kohaerenzstiftung.game.gl.objects.Object) -> c
    void handleHandleOnResume() -> o
    void handleHandleOnResume(org.kohaerenzstiftung.game.gl.objects.Object) -> c
    void handleHandleOnPause() -> p
    void handleHandleOnPause(org.kohaerenzstiftung.game.gl.objects.Object) -> d
org.kohaerenzstiftung.game.gl.objects.Object -> org.kohaerenzstiftung.a.a.a.b:
    org.kohaerenzstiftung.game.gl.objects.Game mGame -> a
    int mLevel -> b
    org.kohaerenzstiftung.game.gl.objects.Object mContainer -> c
    java.util.List mObjects -> d
    int mMinLevel -> e
    int mMaxLevel -> f
    java.util.List mAddToObjects -> g
    void setmGame(org.kohaerenzstiftung.game.gl.objects.Game) -> a
    void setGLStates(javax.microedition.khronos.opengles.GL10) -> a
    void unsetGLStates(javax.microedition.khronos.opengles.GL10) -> b
    void doRender(javax.microedition.khronos.opengles.GL10) -> c
    void addToObjects(org.kohaerenzstiftung.game.gl.objects.Object) -> a
    void updateMinMaxLevels(int,int) -> a
    void establishMinMaxLevels() -> b
    void onResume() -> c
    void onPause() -> d
org.kohaerenzstiftung.game.gl.objects.util.InvisibleTexObject -> org.kohaerenzstiftung.a.a.a.a.a:
    org.kohaerenzstiftung.game.gl.objects.Game mGame -> h
    boolean mFirstSetGlStates -> i
    int mTextureId -> j
    java.lang.String mPath -> k
    boolean mAddToContainer -> l
    boolean mIsAsset -> m
    void doRender(javax.microedition.khronos.opengles.GL10) -> c
    void setGLStates(javax.microedition.khronos.opengles.GL10) -> a
    void unsetGLStates(javax.microedition.khronos.opengles.GL10) -> b
    void onResume() -> c
    void onPause() -> d
    org.kohaerenzstiftung.game.Factorisable createInstance() -> a
org.kohaerenzstiftung.game.gl.objects.util.TexCoordValues -> org.kohaerenzstiftung.a.a.a.a.b:
    float mHighX -> a
    float mHighY -> b
    float mLowX -> c
    float mLowY -> d
org.kohaerenzstiftung.game.gl.objects.util.VisibleTexObject -> org.kohaerenzstiftung.a.a.a.a.c:
    java.nio.ShortBuffer mIndices -> h
    java.nio.FloatBuffer mTextCoords -> i
    java.nio.FloatBuffer mVertices -> j
    void doRender(javax.microedition.khronos.opengles.GL10) -> c
    float getHeight() -> a
    org.kohaerenzstiftung.game.gl.objects.util.TexCoordValues getTexCoordValues() -> e
    float getWidth() -> f
    float getX() -> g
    float getY() -> h
    void preSetGLStates(javax.microedition.khronos.opengles.GL10) -> d
    void setGLStates(javax.microedition.khronos.opengles.GL10) -> a
    void setTexCoords() -> i
    void unsetGLStates(javax.microedition.khronos.opengles.GL10) -> b
    void onResume() -> c
    void onPause() -> d
org.kohaerenzstiftung.wwwidget.AppWidgetProvider -> org.kohaerenzstiftung.wwwidget.AppWidgetProvider:
    void onDeleted(android.content.Context,int[]) -> onDeleted
org.kohaerenzstiftung.wwwidget.BroadcastReceiver -> org.kohaerenzstiftung.wwwidget.BroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.kohaerenzstiftung.wwwidget.Helper -> org.kohaerenzstiftung.wwwidget.a:
    android.graphics.Bitmap$Config BITMAP_CONFIG -> a
    void configure(android.content.Context,java.lang.String,int,int,int,int,int,int,int) -> a
    int getLastUpdate(java.io.File) -> a
    void setLastUpdate(java.io.File,int) -> a
    void delete(java.io.File) -> b
    java.lang.String getInitialDirPath(android.content.Context) -> a
    java.lang.String getInitial(java.lang.String,int,int,android.content.Context) -> a
    java.util.LinkedList getKohaerenzstiftungParameters(java.lang.String,int,int,boolean,int,int,int,int) -> a
    java.lang.String doGetFileFromServer(java.lang.String,int,java.lang.String,java.lang.String,java.util.LinkedList,java.io.File,android.content.Context) -> a
    java.util.ArrayList getFingerprints(android.content.Context) -> b
    void createInfoTxt(java.lang.String,java.lang.String,int,int) -> a
    void writebitmap2File(android.graphics.Bitmap,java.lang.String) -> a
    android.graphics.Bitmap getFragment(android.graphics.Bitmap,int,int,int,int) -> a
    java.lang.String throwableToString(java.lang.Throwable) -> a
    void updateWidgetViaService(android.content.Context,int) -> a
    org.kohaerenzstiftung.wwwidget.PeriodicParameters getPeriodicParameters(android.content.Context,int) -> c
    void updateWidgetDirectly(android.content.Context,int) -> b
    boolean isWifiConnected(android.content.Context) -> c
    java.lang.String getFileFromServer(android.content.Context,java.lang.String,boolean,int,int,int,int,int,int,java.io.File) -> a
    int getPort(java.lang.String,java.lang.String) -> a
    java.lang.String getServer(java.lang.String) -> a
    java.lang.String getWwWidgetUsername() -> a
org.kohaerenzstiftung.wwwidget.MainActivity -> org.kohaerenzstiftung.wwwidget.MainActivity:
    int mImageWidth -> l
    int mImageHeight -> m
    int mStandardLength -> n
    float mRectangleWidth -> g
    float mRectangleHeight -> h
    float mRectangleX -> i
    float mRectangleY -> j
    org.kohaerenzstiftung.wwwidget.MainActivity$Touch mFirstTouch -> o
    org.kohaerenzstiftung.wwwidget.MainActivity$Touch mSecondTouch -> p
    long mLastUpdate -> k
    org.kohaerenzstiftung.game.gl.objects.util.InvisibleTexObject mRectangleInvisibleTexObject -> q
    float mWidth -> r
    float mHeight -> s
    org.kohaerenzstiftung.wwwidget.MainActivity$RectangleObject mRectangleObject -> t
    java.lang.String mUrl -> u
    java.lang.String mDirectory -> v
    boolean mArgsOk -> w
    boolean mIsSetup -> x
    boolean mTouched -> y
    void update(long) -> c
    void setupObjects(java.lang.String) -> a
    org.kohaerenzstiftung.game.Resolution getResolution(int,int,int) -> a
    int getMaxStreams() -> i
    org.kohaerenzstiftung.game.Game$AccelerationChangedListener getAccelerationChangedListener() -> j
    org.kohaerenzstiftung.game.Game$HandleTouchesListener getHandleTouchesListener() -> k
    void handleTouch(org.kohaerenzstiftung.game.TouchEvent) -> a
    void moveRectangle(org.kohaerenzstiftung.game.Finger,org.kohaerenzstiftung.game.TouchEvent) -> a
    void moveRectangle(float,float) -> a
    void zoomRectangle(org.kohaerenzstiftung.wwwidget.MainActivity$Touch,org.kohaerenzstiftung.wwwidget.MainActivity$Touch,org.kohaerenzstiftung.game.TouchEvent) -> a
    float calcDistance(org.kohaerenzstiftung.wwwidget.MainActivity$Touch,org.kohaerenzstiftung.wwwidget.MainActivity$Touch) -> a
    void moveImage(org.kohaerenzstiftung.game.Finger,org.kohaerenzstiftung.game.TouchEvent) -> b
    int moveImage(float,float) -> b
    void zoomImage(org.kohaerenzstiftung.wwwidget.MainActivity$Touch,org.kohaerenzstiftung.wwwidget.MainActivity$Touch,org.kohaerenzstiftung.game.TouchEvent) -> b
    void readArguments(android.os.Bundle) -> a
    void initialise() -> a
    void recoverResources() -> b
    void releaseResources() -> c
    void uninitialise() -> d
    java.lang.Class getServiceToStart() -> g
    void onServiceBound() -> f
    java.lang.Class getServiceToBind() -> h
    void onServiceUnbound() -> e
    int access$0(org.kohaerenzstiftung.wwwidget.MainActivity) -> a
    int access$1(org.kohaerenzstiftung.wwwidget.MainActivity) -> b
    int access$2(org.kohaerenzstiftung.wwwidget.MainActivity) -> c
    void access$3(org.kohaerenzstiftung.wwwidget.MainActivity,boolean) -> a
org.kohaerenzstiftung.wwwidget.MainActivity$1 -> org.kohaerenzstiftung.wwwidget.b:
    org.kohaerenzstiftung.wwwidget.MainActivity this$0 -> a
    void handleTouches(java.util.LinkedList) -> a
org.kohaerenzstiftung.wwwidget.MainActivity$Image -> org.kohaerenzstiftung.wwwidget.c:
    org.kohaerenzstiftung.game.gl.objects.util.InvisibleTexObject[][] mImageInvisibleTexObjects -> b
    org.kohaerenzstiftung.wwwidget.MainActivity$ImageObject[][] mImageObject -> c
    org.kohaerenzstiftung.wwwidget.MainActivity this$0 -> a
org.kohaerenzstiftung.wwwidget.MainActivity$ImageObject -> org.kohaerenzstiftung.wwwidget.d:
    org.kohaerenzstiftung.game.gl.objects.util.TexCoordValues mTextCoordValues -> h
    float mHeight -> j
    float mWidth -> k
    float mX -> l
    float mY -> m
    org.kohaerenzstiftung.wwwidget.MainActivity this$0 -> i
    float getHeight() -> a
    org.kohaerenzstiftung.game.gl.objects.util.TexCoordValues getTexCoordValues() -> e
    float getWidth() -> f
    float getX() -> g
    float getY() -> h
    void preSetGLStates(javax.microedition.khronos.opengles.GL10) -> d
org.kohaerenzstiftung.wwwidget.MainActivity$RectangleObject -> org.kohaerenzstiftung.wwwidget.e:
    org.kohaerenzstiftung.game.gl.objects.util.TexCoordValues mTextCoordValues -> h
    org.kohaerenzstiftung.wwwidget.MainActivity this$0 -> i
    float getHeight() -> a
    org.kohaerenzstiftung.game.gl.objects.util.TexCoordValues getTexCoordValues() -> e
    float getWidth() -> f
    float getX() -> g
    float getY() -> h
    void preSetGLStates(javax.microedition.khronos.opengles.GL10) -> d
    boolean inBounds(float,float) -> a
org.kohaerenzstiftung.wwwidget.MainActivity$Touch -> org.kohaerenzstiftung.wwwidget.f:
    boolean mIsTouching -> a
    org.kohaerenzstiftung.game.Finger mFinger -> b
    float mX -> c
    float mY -> d
    org.kohaerenzstiftung.wwwidget.MainActivity this$0 -> e
org.kohaerenzstiftung.wwwidget.PeriodicParameters -> org.kohaerenzstiftung.wwwidget.g:
    java.lang.String mUrl -> a
    int mX -> b
    int mY -> c
    int mWidth -> d
    int mHeight -> e
    int mDisplayWidth -> f
    int mDisplayHeight -> g
org.kohaerenzstiftung.wwwidget.PreferenceActivity -> org.kohaerenzstiftung.wwwidget.PreferenceActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.kohaerenzstiftung.wwwidget.Service -> org.kohaerenzstiftung.wwwidget.Service:
    boolean mStopping -> a
    java.lang.Thread mThread -> b
    void handleStartCommand() -> a
    void onDestroy() -> onDestroy
    void updateWidgets() -> c
    int getLastUpdate(int) -> a
    org.kohaerenzstiftung.Service$ServiceHandler getFreeServiceHandler() -> b
    void fillMessage(android.content.Intent,int,int,android.os.Message) -> a
    void access$0(org.kohaerenzstiftung.wwwidget.Service) -> a
org.kohaerenzstiftung.wwwidget.Service$1 -> org.kohaerenzstiftung.wwwidget.h:
    org.kohaerenzstiftung.wwwidget.Service this$0 -> a
    void run() -> run
org.kohaerenzstiftung.wwwidget.SetupActivity -> org.kohaerenzstiftung.wwwidget.SetupActivity:
    org.kohaerenzstiftung.HTTPServerRequest mHttpServerRequest -> g
    java.lang.Runnable mGetScreenshotSuccessfulRunnable -> h
    java.lang.Runnable mGetScreenshotCancelledRunnable -> i
    org.kohaerenzstiftung.HTTPServerRequest$Worker mGetScreenshotWorker -> j
    org.kohaerenzstiftung.HTTPServerRequest$ThrowableRunnable mGetScreenshotFailedRunnable -> k
    java.lang.String mInfo -> d
    int mDisplayWidth -> e
    int mDisplayHeight -> f
    android.widget.EditText mUrlEditText -> l
    android.widget.Button mOkButton -> m
    int mAppWidgetId -> n
    java.lang.String mDirectory -> o
    java.lang.String mUrl -> p
    void recoverResources() -> b
    void startMainActivity(java.lang.String) -> a
    void doStartMainActivity() -> m
    void doStartPreferenceActivity() -> n
    int getLayout() -> i
    void updateViews() -> j
    void readArguments(android.os.Bundle) -> a
    void findElements() -> k
    void assignHandlers() -> l
    void checkOkEnabled(java.lang.String) -> b
    boolean isValidUrl(java.lang.String) -> c
    void handleOk() -> o
    void doHandleOk() -> p
    void handleResult(android.os.Bundle) -> b
    void releaseResources() -> c
    void initialise() -> a
    void uninitialise() -> d
    java.lang.Class getServiceToStart() -> g
    void onServiceBound() -> f
    java.lang.Class getServiceToBind() -> h
    void onServiceUnbound() -> e
    java.lang.String access$0(org.kohaerenzstiftung.wwwidget.SetupActivity) -> a
    void access$1(org.kohaerenzstiftung.wwwidget.SetupActivity,android.widget.Button) -> a
    android.widget.Button access$2(org.kohaerenzstiftung.wwwidget.SetupActivity) -> b
org.kohaerenzstiftung.wwwidget.SetupActivity$1 -> org.kohaerenzstiftung.wwwidget.i:
    org.kohaerenzstiftung.wwwidget.SetupActivity this$0 -> a
    void run() -> run
org.kohaerenzstiftung.wwwidget.SetupActivity$10 -> org.kohaerenzstiftung.wwwidget.j:
    org.kohaerenzstiftung.wwwidget.SetupActivity this$0 -> a
    void execute() -> a
org.kohaerenzstiftung.wwwidget.SetupActivity$2 -> org.kohaerenzstiftung.wwwidget.k:
    org.kohaerenzstiftung.wwwidget.SetupActivity this$0 -> a
    void run() -> run
org.kohaerenzstiftung.wwwidget.SetupActivity$3 -> org.kohaerenzstiftung.wwwidget.l:
    org.kohaerenzstiftung.wwwidget.SetupActivity this$0 -> a
    org.kohaerenzstiftung.AsyncTaskResult work() -> a
org.kohaerenzstiftung.wwwidget.SetupActivity$4 -> org.kohaerenzstiftung.wwwidget.m:
    java.lang.Throwable mThrowable -> b
    org.kohaerenzstiftung.wwwidget.SetupActivity this$0 -> a
    void run() -> run
    void setThrowable(java.lang.Throwable) -> a
org.kohaerenzstiftung.wwwidget.SetupActivity$5 -> org.kohaerenzstiftung.wwwidget.n:
    org.kohaerenzstiftung.wwwidget.SetupActivity this$0 -> a
    void execute() -> a
org.kohaerenzstiftung.wwwidget.SetupActivity$6 -> org.kohaerenzstiftung.wwwidget.o:
    org.kohaerenzstiftung.wwwidget.SetupActivity this$0 -> c
    void handleResult(android.os.Bundle) -> a
    void handleError(java.lang.String) -> a
org.kohaerenzstiftung.wwwidget.SetupActivity$7 -> org.kohaerenzstiftung.wwwidget.p:
    org.kohaerenzstiftung.wwwidget.SetupActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.kohaerenzstiftung.wwwidget.SetupActivity$8 -> org.kohaerenzstiftung.wwwidget.q:
    org.kohaerenzstiftung.wwwidget.SetupActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
org.kohaerenzstiftung.wwwidget.SetupActivity$9 -> org.kohaerenzstiftung.wwwidget.r:
    org.kohaerenzstiftung.wwwidget.SetupActivity this$0 -> a
    void execute() -> a
org.kohaerenzstiftung.wwwidget.SetupActivity$Executor -> org.kohaerenzstiftung.wwwidget.s:
    org.kohaerenzstiftung.wwwidget.SetupActivity this$0 -> b
    void execute() -> a
org.kohaerenzstiftung.wwwidget.SetupActivity$TextInfoDialog -> org.kohaerenzstiftung.wwwidget.t:
    android.widget.TextView mInfoTextView -> b
    org.kohaerenzstiftung.wwwidget.SetupActivity$Executor mExecutor -> c
    org.kohaerenzstiftung.wwwidget.SetupActivity this$0 -> a
    void updateViews() -> d
    void recoverResources() -> e
    void releaseResources() -> f
    void findElements() -> g
    void assignHandlers() -> h
    void handleOk() -> i
org.kohaerenzstiftung.wwwidget.SetupActivity$TextInfoDialog$1 -> org.kohaerenzstiftung.wwwidget.u:
    org.kohaerenzstiftung.wwwidget.SetupActivity$TextInfoDialog this$1 -> a
    void onClick(android.view.View) -> onClick
